akka.persistence {
  snapshot-store {
    linq2db {
      class = "Akka.Persistence.Sql.Linq2Db.Snapshot.Linq2DbSnapshotStore, Akka.Persistence.Sql.Linq2Db"
      plugin-dispatcher = "akka.persistence.dispatchers.default-plugin-dispatcher"
      connection-string = ""
      
      # Provider name is required.
      # Refer to LinqToDb.ProviderName for values
      # Always use a specific version if possible
      # To avoid provider detection performance penalty
      # Don't worry if your DB is newer than what is listed;
      # Just pick the newest one (if yours is still newer)
      provider-name = ""

      #Only set to TRUE if unit tests pass with the connection string you intend to use!
      #This setting will go away once https://github.com/linq2db/linq2db/issues/2466 is resolved
      use-clone-connection = false
      
      # if set to "sqlite", "sqlserver", "mysql", or "postgres",
      # Column names will be compatible with Akka.Persistence.Sql
      # You still must set your table name!
      table-compatibility-mode = null
      
      # Default serializer used as manifest serializer when applicable and payload serializer when 
      # no specific binding overrides are specified.
      # If set to null, the default `System.Object` serializer is used.
      serializer = null
      
      dao = "Akka.Persistence.Sql.Linq2Db.Snapshot.ByteArraySnapshotDao, Akka.Persistence.Sql.Linq2Db"
      
      compatibility-mode = false
      
      tables.snapshot {
        schema-name = null
        
        table-name = "snapshot"
        
        #if true, tables will attempt to be created.
        auto-init = true
        
        #if true, a warning will be logged
        #if auto-init of tables fails.
        #set to false if you don't want this warning logged
        #perhaps if running CI tests or similar.
        warn-on-auto-init-fail = true
        
        column-names {
          persistenceId = persistence_id
          sequenceNumber = sequence_number
          created = created
          snapshot = snapshot
          manifest = manifest
          serializerId = serializer_id
        }
        sql-server-compat-column-names {
          persistenceId = PersistenceId
          sequenceNumber = SequenceNr
          created = Timestamp
          snapshot = Snapshot
          manifest = Manifest
          serializerId = SerializerId
        }
        sqlite-compat-column-names {
          persistenceId = persistence_id,
          sequenceNumber = sequence_nr,
          snapshot = payload,
          manifest = manifest,
          created = created_at,
          serializerId = serializer_id,
        }
        postgres-compat-column-names {
          persistenceId = persistence_id,
          sequenceNumber = sequence_nr,
          snapshot = payload,
          manifest = manifest,
          created = created_at,
          serializerId = serializer_id,
        }
        mysql-compat-column-names {
          persistenceId = persistence_id,
          sequenceNumber = sequence_nr,
          snapshot = snapshot,
          manifest = manifest,
          created = created_at,
          serializerId = serializer_id,
        }
      }
    }
  }
}